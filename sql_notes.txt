
SQL:
Database is a logical,consistent and organized collection of related data that can be easily accessed,managed and updated.The main purpose is to operate large information of data(information)by storing,retrieving and managing data.DBMS is a software which is used to interact with the database.RDBMS organizes data into a table based data structure with a strict,predefined schema required.DBMS is a software that allows user to create  and maintain a database. 
Database architecture:
1.1-Tier architecture:Both UI &CPU in one system.(Accessing from the same system.)
2.2-Tier architecture:The UI will be in one machine.(The UI in one machine and DBMS in another machine)
3.3-Tier architecture:There will be one UI and multiple machines.(Multiple UI,Multiple DBMS,Multiple systems)

SQL COMMANDS:
1.DDL-Data Defintion Language(Create,Alter,Drop,Truncate)
2.DML-Data Manipulation Language(Insert,Update,Delete)
3.DCL-Data Control Language(Grant,Revoke)
4.TCL-Transaction Control Language(Commit,Rollback)
5.DQL-Data Query Language(Select)


1.\L-TO VIEW A DATABASE
2.\dt-to view a table in a database
3.create database database_name
4.\d-to display a table
5.\c-to connect a database to a table
6.create table table_name(var_name_1 var_type,var_name_2,var_type);
7.insert into table_name values(arg_1,arg_2);
8.select * from table_name;-to view the data inserted in the table
9.alter table table_name add var_name_3 var_type;
10.ALTER TABLE Table_name DROP COLUMN column_name;
11.UPDATE table_name SET Column_name WHERE unique key value;
12.select * from table_name ORDER BY column_name (or) desc;
13.SELECT column_name(s) FROM table_name WHERE column_name IN (value1, value2, ...);
14.SELECT column_name(s) FROM table_name WHERE column_name BETWEEN value1 AND value2;

Aggregate functions:

sum()

AVG()

Min()

Max()

Count()

Joins:

1.Inner Join

2.Outer Join- 1.left outer join

               2.right outer join

3.Self Join


select (emp_id,dep,sal),RANK() OVER(PARTITION BY dep ORDER BY sal DESC) AS rank
FROM aids;-Rank query

select (emp_id,dep,sal),DENSE_RANK() OVER(PARTITION BY dep ORDER BY sal DESC) AS denserank
FROM aids;=Dense rank query

select (emp_id,dep,sal),row_number() OVER(PARTITION BY dep ORDER BY sal DESC) AS rownum
FROM aids;-

The reason why we use postgre_sql over MySQL is that we can store all types of data,and it has higherÂ accessibility.

Key Type	Purpose	Example Snippet
Primary Key	Unique identifier, no NULLs or duplicates	student_id INT PRIMARY KEY
Foreign Key	Links tables, enforces referential integrity	FOREIGN KEY (student_id) REFERENCES Students(student_id)
Unique Key	Ensures unique values, can allow NULLs	email VARCHAR(100) UNIQUE
Composite Key	Primary key on multiple columns	PRIMARY KEY (student_id, course_id)
Candidate Key	Possible unique keys	student_id and email both unique
Alternate Key	Candidate key not chosen as primary	email if student_id is primary
Surrogate Key	Artificial unique identifier	product_id INT IDENTITY(1,1) PRIMARY KEY
